*llmate.txt* A Neovim plugin that leverages LLM to enhance text operations in your editor.

================================================================================
CONTENTS                                                           *llmate-contents*

1. Introduction ............................................. |llmate-introduction|
2. Requirements ............................................ |llmate-requirements|
3. Installation ........................................... |llmate-installation|
4. Configuration .......................................... |llmate-configuration|
5. Usage .................................................. |llmate-usage|
6. Commands ............................................... |llmate-commands|
7. Mappings ............................................... |llmate-mappings|
8. License ................................................ |llmate-license|

================================================================================
1. INTRODUCTION                                               *llmate-introduction*

LLMate is a Neovim plugin that provides AI-powered code assistance using Large 
Language Models (LLMs). It helps developers with code completion, documentation, 
refactoring, and more.

⚠️ **Warning**: This README was generated by AI 🤖. While efforts were made to ensure accuracy, there might be errors or missing details. Please review the content critically and refer to the code for precise information. 🙏

================================================================================
2. REQUIREMENTS                                               *llmate-requirements*

- Neovim >= 0.8.0
- Git (for installation)
- Make command
- Rust environment (cargo, rustc)

The plugin requires a Rust environment for compiling its native components. You can
install Rust using rustup (https://rustup.rs/):
>
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
<

Make sure you have the `make` command available in your system:
- For macOS: Install Xcode Command Line Tools
- For Ubuntu/Debian: `sudo apt-get install build-essential`
- For Fedora: `sudo dnf groupinstall "Development Tools"`

================================================================================
3. INSTALLATION                                               *llmate-installation*

Using lazy.nvim: >
    {
        "zhuxiaoyan/llmate.nvim",
        build = "make",
        dependencies = {
            -- Add any dependencies here
        },
        config = function()
            local config = {
                key = "<leader>g",
            }
            require("llmate").setup(config)
        end,
        dependencies = "grapp-dev/nui-components.nvim",
    }

================================================================================
4. CONFIGURATION                                             *llmate-configuration*

Configure LLMate by calling the setup function with your desired options: >

    require("llmate").setup({
        -- Add your configuration options here
        model = "gpt-4",
        temperature = 0.7,
        -- Add more options as needed
    })
<

================================================================================
5. USAGE                                                           *llmate-usage*

LLMate provides several features to assist with your coding:

- Code completion
- Documentation generation
- Code explanation
- Refactoring suggestions
- Bug fixing assistance

See |llmate-commands| and |llmate-mappings| for specific usage instructions.

================================================================================
6. COMMANDS                                                     *llmate-commands*

Commands provided by LLMate:

:LLMateComplete                                                    *:LLMateComplete*
    Generate code completion for the current context.

:LLMateExplain                                                      *:LLMateExplain*
    Explain the selected code or current function.

:LLMateRefactor                                                    *:LLMateRefactor*
    Get refactoring suggestions for the selected code.

================================================================================
7. MAPPINGS                                                     *llmate-mappings*

Default key mappings (can be customized in setup):

<Leader>lc     Generate code completion
<Leader>le     Explain code
<Leader>lr     Get refactoring suggestions

================================================================================
8. LICENSE                                                       *llmate-license*

MIT License
Copyright (c) 2024 Ian Zhu (redilove@gmail.com)

================================================================================
vim:tw=78:ts=8:ft=help:norl:
